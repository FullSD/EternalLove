@inject HttpClient _client

<EditForm Model="@userdetail" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Name:</label>
            <div>
                <InputText @bind-Value="userdetail.Name" class="form-control" />
                <ValidationMessage For="@(()=>userdetail.Name)" />
            </div>
        </div>

        <div class="form-group">
            <label>Gender:</label>
            <div>
                <InputSelect @bind-Value="userdetail.GenderId" class="form-control">
                    <option value="">-- Select Gender --</option>
                    @if (Genders != null)
                    {
                        foreach (var gender in Genders)
                        {
                            <option value="@gender.Id">@gender.Name</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => userdetail.GenderId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Photo:</label>
            <div>
                <InputText @bind-Value="userdetail.PhotoLink" class="form-control" />
                <ValidationMessage For="@(()=>userdetail.PhotoLink)" />
            </div>
        </div>
        <div class="form-group">
            <label>Bio:</label>
            <div>
                <InputText @bind-Value="userdetail.Bio" class="form-control" />
                <ValidationMessage For="@(()=>userdetail.Bio)" />
            </div>
        </div>
        <div class="form-group">
            <label>Preferance:</label>
            <div>
                <InputText @bind-Value="userdetail.Perferance" class="form-control" />
                <ValidationMessage For="@(()=>userdetail.Perferance)" />
            </div>
        </div>
        <div class="form-group">
            <div class="form-group">
                <label>Location:</label>
                <div>
                    <InputSelect @bind-Value="userdetail.LocationId" class="form-control">
                        <option value="">-- Select Location --</option>
                        @if (Locations != null)
                        {
                            foreach (var location in Locations)
                            {
                                <option value="@location.Id">@location.Name</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => userdetail.LocationId)" />
                </div>
            </div>
        </div>
    </fieldset>

        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>

        }
        <BackToList Target="userdetails" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public UserDetail userdetail { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Gender> Genders;
    private IList<Location> Locations;

    protected async override Task OnInitializedAsync()
    {
        Genders = await _client.GetFromJsonAsync<List<Gender>>($"{Endpoints.GendersEndpoint}");
        Locations = await _client.GetFromJsonAsync<List<Location>>($"{Endpoints.LocationsEndpoint}");
    }

}
